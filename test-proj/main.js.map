{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/listtargets/listtargets.component.css","webpack:///./src/app/components/listtargets/listtargets.component.html","webpack:///./src/app/components/listtargets/listtargets.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/targets/targets.component.css","webpack:///./src/app/components/targets/targets.component.html","webpack:///./src/app/components/targets/targets.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/targets.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\nimport { TargetsService } from './targets.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sushma-proj';\n  policies: any[] = [];\n  constructor(private targetsService: TargetsService) { }\n\n  ngOnInit() {\n    this.targetsService.getTargetInfo().subscribe((data : any[])=>{\n        console.log(data);\n        this.policies = data;\n    })\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';  \nimport { DataService } from './data.service';\nimport { AppComponent } from './app.component';\nimport { TargetsComponent } from './components/targets/targets.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ListTargetsComponent } from './components/listtargets/listtargets.component';\nconst appRoutes: Routes = [\n  {\n    path: 'targets/:id',\n    component: TargetsComponent\n  },\n  {\n    path: 'targets',\n    component: TargetsComponent\n  },\n  {\n    path: 'showtargets',\n    component: ListTargetsComponent\n  },\n  {\n    path: '**',\n    component: ListTargetsComponent\n  }\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    TargetsComponent,\n    ListTargetsComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    InMemoryWebApiModule.forRoot(DataService),\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlzdHRhcmdldHMvbGlzdHRhcmdldHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"col-md-12\\\" style=\\\"padding-top:20px;\\\">  \\r\\n  <h2>List of Targets</h2>  \\r\\n  <div style=\\\"text-align:right;padding:10px;\\\">\\r\\n    <button routerLink=\\\"/targets\\\" class=\\\"btn btn-info\\\">Add Targets</button>\\r\\n  </div>\\r\\n  <div class=\\\"table-responsive table-container\\\">  \\r\\n    <table class=\\\"table\\\">  \\r\\n      <thead>  \\r\\n        <tr>  \\r\\n          <th>ID</th>  \\r\\n          <th>Company Name</th>  \\r\\n          <th>Street Address</th>\\r\\n          <th>Country</th>   \\r\\n          <th>Email</th>  \\r\\n          <th>Phone</th>  \\r\\n          <th>Other Phone</th>\\r\\n          <th>Status</th>  \\r\\n          <th>Budget Invested</th>\\r\\n          <th>Gross Profit</th>    \\r\\n          <th style=\\\"width:180px;\\\">Actions</th>  \\r\\n        </tr>  \\r\\n      </thead>  \\r\\n      <tbody>  \\r\\n        <tr *ngFor=\\\"let target of targets\\\">  \\r\\n          <td>{{target.id}}</td>  \\r\\n          <td>{{target.companyName}}</td>\\r\\n          <td>{{target.streetAddress}}</td>\\r\\n          <td>{{target.country}}</td>\\r\\n          <td>{{target.email}}</td>   \\r\\n          <td>{{target.phone1}}</td> \\r\\n          <td>{{target.phone2}}</td>\\r\\n          <td>{{target.status}}</td>  \\r\\n          <td>${{target.budgetInv}}</td> \\r\\n          <td>${{target.grossProfit}}</td> \\r\\n          <td>  \\r\\n            <button (click)=\\\"deleteTarget(target.id)\\\" class=\\\"btn btn-info\\\"> Delete</button>  \\r\\n            <button routerLink=\\\"/targets/{{target.id}}\\\" style=\\\"margin-left: 20px;\\\" class=\\\"btn btn-info\\\"> Edit</button>  \\r\\n          </td>  \\r\\n        </tr>  \\r\\n      </tbody>  \\r\\n    </table>  \\r\\n  </div>  \\r\\n</div>  \"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TargetsService } from 'src/app/targets.service';\r\n@Component({\r\n  selector: 'app-listtargets',\r\n  templateUrl: './listtargets.component.html',\r\n  styleUrls: ['./listtargets.component.css']\r\n})\r\nexport class ListTargetsComponent implements OnInit {\r\n  public targets;\r\n  constructor(\r\n    private router: Router,private targetsService: TargetsService\r\n  ) { }\r\n \r\n  ngOnInit() {\r\n    this.targetsService.getTargetInfo().subscribe((data : any[])=>{\r\n        console.log(data);\r\n        this.targets = data;\r\n    })\r\n  }\r\n  deleteTarget(targetId){\r\n    this.targetsService.deleteTarget(targetId).subscribe((ret)=>{\r\n      this.targetsService.getTargetInfo().subscribe((data : any[])=>{\r\n        console.log(data);\r\n        this.targets = data;\r\n      })\r\n    })\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-info justify-content-between\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Targets</a>\\r\\n  <div>\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"targets\\\">Add Target</a>\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"showtargets\\\"> | List Targets</a>\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  constructor(  ) { }\r\n  ngOnInit() { }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGFyZ2V0cy90YXJnZXRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"mt-4 col-10 offset-2\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n      {{success}}\\r\\n    <div class=\\\"card-header\\\"><h2>{{targetFrmlabel}}</h2></div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form [formGroup]=\\\"targetForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <h3 style=\\\"font-size: 1.0rem;\\\">Company Information</h3>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"companyName\\\" class=\\\"col-sm-2 col-form-label\\\">Company Name</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"companyName\\\" formControlName=\\\"companyName\\\" class=\\\"form-control\\\" id=\\\"companyName\\\" placeholder=\\\"Company Name\\\" ngModel required>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.companyName\\\">\\r\\n              {{error.companyName}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"streetAddress\\\" class=\\\"col-sm-2 col-form-label\\\">Street Address</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"streetAddress\\\" formControlName=\\\"streetAddress\\\" class=\\\"form-control\\\" id=\\\"streetAddress\\\" placeholder=\\\"Street Address\\\" ngModel required>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.streetAddress\\\">\\r\\n              {{error.streetAddress}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"city\\\" class=\\\"col-sm-2 col-form-label\\\">City</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"city\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\" id=\\\"city\\\" placeholder=\\\"City\\\" ngModel required>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.city\\\">\\r\\n              {{error.city}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"state\\\" class=\\\"col-sm-2 col-form-label\\\">State</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"state\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" id=\\\"state\\\" placeholder=\\\"State\\\" ngModel required>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.state\\\">\\r\\n              {{error.state}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"zip\\\" class=\\\"col-sm-2 col-form-label\\\">Postal / Zip Code</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"zip\\\" formControlName=\\\"zip\\\" class=\\\"form-control\\\" id=\\\"zip\\\" placeholder=\\\"Postal / Zip Code\\\" ngModel required>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.zip\\\">\\r\\n              {{error.zip}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"country\\\" class=\\\"col-sm-2 col-form-label\\\">Country</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"country\\\" formControlName=\\\"country\\\" class=\\\"form-control\\\" id=\\\"country\\\" placeholder=\\\"Country\\\" ngModel required>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.country\\\">\\r\\n              {{error.country}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <h3 style=\\\"font-size: 1.0rem;\\\">Contact Information</h3>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"phone1\\\" class=\\\"col-sm-2 col-form-label\\\">Email</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" ngModel required>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.email\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"phone1\\\" class=\\\"col-sm-2 col-form-label\\\">Phone</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"mobile\\\" name=\\\"phone1\\\" formControlName=\\\"phone1\\\" class=\\\"form-control\\\" id=\\\"phone1\\\" placeholder=\\\"Phone\\\" ngModel required>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.phone1\\\">\\r\\n              {{error.phone1}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"phone2\\\" class=\\\"col-sm-2 col-form-label\\\">Other Phone</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"mobile\\\" name=\\\"phone2\\\" class=\\\"form-control\\\" formControlName=\\\"phone2\\\" id=\\\"phone2\\\" placeholder=\\\"Other Phone\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"status\\\" class=\\\"col-sm-2 col-form-label\\\">Status</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <select class=\\\"form-control\\\" name=\\\"status\\\" formControlName=\\\"status\\\" id=\\\"status\\\"  ngModel required>\\r\\n              <option value=\\\"\\\">--Status--</option>\\r\\n              <option *ngFor=\\\"let status of statuses\\\" value={{status}}>\\r\\n                  {{status}}\\r\\n              </option>\\r\\n          </select>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.status\\\">\\r\\n              {{error.status}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <h3 style=\\\"font-size: 1.0rem;\\\">Financial Performance</h3>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"budgetInv\\\" class=\\\"col-sm-2 col-form-label\\\">Budget Invested</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"budgetInv\\\" name=\\\"budgetInv\\\" formControlName=\\\"budgetInv\\\" class=\\\"form-control\\\" id=\\\"budgetInv\\\" placeholder=\\\"Budget Invested\\\"\\r\\n            ngModel required>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.budgetInv\\\">\\r\\n              {{error.budgetInv}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"grossProfit\\\" class=\\\"col-sm-2 col-form-label\\\">Gross Profit</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"grossProfit\\\" name=\\\"grossProfit\\\" formControlName=\\\"grossProfit\\\" class=\\\"form-control\\\" id=\\\"grossProfit\\\" placeholder=\\\"Gross Profit\\\"\\r\\n            ngModel required>\\r\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.grossProfit\\\">\\r\\n              {{error.grossProfit}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n       <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-10 offset-2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!targetForm.valid\\\">{{targetFrmbtn}}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"; \r\nimport { TargetsService } from 'src/app/targets.service';\r\nimport { Targets } from '../targets.model';\r\n@Component({\r\n  selector: 'app-targets',\r\n  templateUrl: './targets.component.html',\r\n  styleUrls: ['./targets.component.css']\r\n})\r\nexport class TargetsComponent implements OnInit {\r\n  target: Targets[]; \r\n  public error = [];\r\n  public statuses = ['Approved', 'Declined','Researching','Pending approval'];\r\n  targetFrmlabel: string = 'Add Target';  \r\n  targetFrmbtn: string = 'Save';\r\n  btnvisibility: boolean = true; \r\n  public success = '';\r\n  targetForm: FormGroup;  \r\n  constructor(\r\n    private router: Router, private route: ActivatedRoute, private targetsService: TargetsService,private formBuilder: FormBuilder\r\n  ) { }\r\n  onSubmit() {\r\n    let targetID  = this.route.snapshot.paramMap.get(\"id\");\r\n    //code for update\r\n    if(targetID){\r\n      this.targetsService.updateTarget(this.targetForm.value,targetID).subscribe(data => {  \r\n        this.router.navigate(['showtargets']);  \r\n      });\r\n    }else{ // code for new record add\r\n      this.targetsService.createTarget(this.targetForm.value).subscribe(\r\n        data => this.handleResponse(data),\r\n        error => this.handleError(error)\r\n      );\r\n    }\r\n  }\r\n  handleResponse(response) {\r\n    this.success = response.data;\r\n    this.router.navigateByUrl('/showtargets');\r\n  }\r\n  handleError(error) {\r\n   this.error = error.error.errors;\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.targetForm = this.formBuilder.group({  \r\n      id: [],  \r\n      status: ['', Validators.required],  \r\n      companyName: ['', [Validators.required]],  \r\n      email: ['', [Validators.required,Validators.email]],\r\n      phone1: ['', [Validators.required]],\r\n      phone2: ['', [Validators.required]],\r\n      streetAddress: ['', [Validators.required]],\r\n      city: ['', [Validators.required]],\r\n      state: ['', [Validators.required]],\r\n      zip: ['', [Validators.required]],\r\n      country: ['', [Validators.required]],\r\n      budgetInv: ['', [Validators.required]],\r\n      grossProfit: ['', [Validators.required]],\r\n    }); \r\n    let targetID  = this.route.snapshot.paramMap.get(\"id\");\r\n    if (targetID) {  \r\n      this.targetsService.getTarget(targetID).subscribe((data: Targets[]) => {  \r\n        this.targetForm.patchValue(data);  \r\n      });  \r\n      this.targetFrmlabel = 'Edit Target';  \r\n      this.targetFrmbtn = 'Update';  \r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {InMemoryDbService} from 'angular-in-memory-web-api'\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService implements InMemoryDbService{\n  constructor() { }\n  createDb(){\n   let  target =  [\n    {  id:  1,  status: 'Researching', companyName: 'xyz', email: 'xyz@xyz.com', phone1: '8888888', phone2: '9999', streetAddress:'Sample address',city:'NJ',state:'NJ',zip:'2141',country:'USA', budgetInv: '500', grossProfit: '500' }\n   ];\n   return {target};\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TargetsService {\n\n  SERVER_URL: string = \"http://localhost:8080/api/\";\n  constructor(private httpClient: HttpClient) { }\n\n  public getTargetInfo(){ \n       return this.httpClient.get(this.SERVER_URL + 'target');\n  }\n\n  public getTarget(targetId){\n       return this.httpClient.get(`${this.SERVER_URL + 'target'}/${targetId}`); \n  }\n  public createTarget(targetPost){\n      return this.httpClient.post(`${this.SERVER_URL + 'target'}`, targetPost)\n  }\n\n  public deleteTarget(targetId){\n      return this.httpClient.delete(`${this.SERVER_URL + 'target'}/${targetId}`)\n  }\n  public updateTarget(targetPost,targetId){\n      return this.httpClient.put(`${this.SERVER_URL + 'target'}/${targetId}`, targetPost)\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}